#### on fait tourner la formule une fois pour créer le cadre de sauvegarde ----
numcartexx<- "5822991"

x<- DATABASE_B%>%filter(numcarte == numcartexx )%>%select(jour, article_body_text, numcarte)
f<- as.integer(count(x))
orderf<- 1:f
data.frame(orderf)
x<- cbind(x, orderf)


x<- x%>%
  mutate_at(.funs = list(prec = lag),
            .vars = vars(article_body_text, article_body_text))%>% #créé une colonne décalé de 1 ligne plus bas
  mutate_at(.funs = list(prec2 = lag),
            .vars = vars(prec, prec))

x<-x%>%filter(str_detect(prec2, "Pertes depuis le début de cette guerre :")|
                str_detect(prec, "Pertes depuis le début de cette guerre :")|
                str_detect(article_body_text, "Pertes depuis le début de cette guerre :"))

x<- x%>%
  mutate_at(.funs = list(prec3 = lag),
            .vars = vars(article_body_text, article_body_text))%>% #créé une colonne décalé de 1 ligne plus bas
  mutate_at(.funs = list(prec4 = lag),
            .vars = vars(prec3, prec3))

x<- x%>%select(numcarte, jour, article_body_text, prec3,prec4, orderf)


#attention il manque une ligne perte depuis le debut de la guerre, 
#on modifie la derniere ligne tout en bas du groupe constitué par la carte, 
#on ne peut pas appliquerà un data frame de plusieurs cartes, il faut faire rbind
#cette formule tel quel pour une DATAFRAME de plusieurs cartes

#on déplace les valeurs de la derniere ligne dans un nouvel ordre
y<-as.integer(unlist(count(x))) #nombre de ligne du dataframe

a<- x[y,1]
b<- x[y,2]
c<- x[y,3]
d<- x[y,4]
e<- x[y,5]

x[y,1]<- a
x[y,2]<- b
x[y,3]<- e
x[y,4]<- c
x[y,5]<- d


x<- x%>%filter(str_detect(article_body_text, "Pertes depuis le début de cette guerre :"))

x<-x%>%filter(!is.na(prec3))

x<- x%>%mutate(col1_placetirer_pays1 = str_locate(prec3, " - ") )%>%
  mutate(col1_placetirer_pays2 = str_locate(prec4, " - ") )%>%
  mutate(pays1_nom = str_sub(prec3, end = col1_placetirer_pays1[,1]-1))%>%
  mutate(pays2_nom = str_sub(prec4, end = col1_placetirer_pays2[,1]-1))%>%
  mutate(pays1_chiffre = str_sub(prec3, start = col1_placetirer_pays1[,2]+1))%>%
  mutate(pays2_chiffre = str_sub(prec4, start = col1_placetirer_pays2[,2]+1))%>%
  filter(!is.na(pays1_nom))%>%
  filter(!is.na(pays2_nom))%>%
  filter(!is.na(pays1_chiffre))%>%
  filter(!is.na(pays2_chiffre))

#On transforme les chiffres en chiffres
#entrainement
w<-c("UKRAINE - 1 Mio.", "UKRAINE - 1.03 Mio.","RUSSIE DU NORD - 1.5 Mio.")

str_detect(w, "- [:digit:](?=[:blank:]) Mio.") #trouveles 1 Mio.
str_detect(w, ".[:digit:]{2} Mio.") #trouveles 1.03 Mio.
str_detect(w, "[:digit:].[:digit:]{1} Mio.") #trouveles 1.5 Mio.

#Realisation
#Remplace le 1 Mio
x<-x%>%
  mutate(pays1_chiffre_COL1 =
           str_detect (prec3,"Mio.")&
           str_detect(prec3, "- [:digit:](?=[:blank:]) Mio."))%>%
  mutate(pays1_chiffre_COL2 = case_when(
    pays1_chiffre_COL1==TRUE~str_replace(pays1_chiffre,"Mio.", "000000")
  ))%>%
  mutate(pays2_chiffre_COL1 =
           str_detect (prec4,"Mio.")&
           str_detect(prec4, "- [:digit:](?=[:blank:]) Mio."))%>%
  mutate(pays2_chiffre_COL2 = case_when(
    pays2_chiffre_COL1==TRUE~str_replace(pays2_chiffre,"Mio.", "000000")
  ))
#remplace 1.03 Mio.
x<-x%>%
  mutate(pays1_chiffre_COL3 =
           str_detect (prec3,"Mio.")&
           is.na(pays1_chiffre_COL2)&
           str_detect(prec3, ".[:digit:]{2} Mio."))%>%
  mutate(pays1_chiffre_COL4 = case_when(
    pays1_chiffre_COL3==TRUE~str_replace(pays1_chiffre,"Mio.", "0000")
  ))%>%
  mutate(pays2_chiffre_COL3 =
           str_detect (prec4,"Mio.")&
           is.na(pays2_chiffre_COL2)&
           str_detect(prec4, ".[:digit:]{2} Mio."))%>%
  mutate(pays2_chiffre_COL4 = case_when(
    pays2_chiffre_COL3==TRUE~str_replace(pays2_chiffre,"Mio.", "0000")
  ))

#remplace 1.5 Mio.
x<-x%>%
  mutate(pays1_chiffre_COL5 =
           str_detect (prec3,"Mio.")&
           is.na(pays1_chiffre_COL2)&
           is.na(pays1_chiffre_COL4)&           
           str_detect(prec3, "[:digit:].[:digit:]{1} Mio."))%>%
  mutate(pays1_chiffre_COL6 = case_when(
    pays1_chiffre_COL5==TRUE~str_replace(pays1_chiffre,"Mio.", "00000")
  ))%>%
  mutate(pays2_chiffre_COL5 =
           str_detect (prec4,"Mio.")&
           is.na(pays2_chiffre_COL2)&
           is.na(pays2_chiffre_COL4)&
           str_detect(prec4, "[:digit:].[:digit:]{1} Mio."))%>%
  mutate(pays2_chiffre_COL6 = case_when(
    pays2_chiffre_COL5==TRUE~str_replace(pays2_chiffre,"Mio.", "00000")
  ))


#regroupement et rangement
x<-x%>%mutate(pays1_chiffre_MIO = paste0(pays1_chiffre_COL2,pays1_chiffre_COL4,pays1_chiffre_COL6))
x$pays1_chiffre_MIO<-str_replace(x$pays1_chiffre_MIO,"NA","")
x$pays1_chiffre_MIO<-str_replace(x$pays1_chiffre_MIO,"NA","")
x$pays1_chiffre_MIO<-str_replace(x$pays1_chiffre_MIO,"NA","")

x<-x%>%mutate(pays2_chiffre_MIO = paste0(pays2_chiffre_COL2,pays2_chiffre_COL4,pays2_chiffre_COL6))
x$pays2_chiffre_MIO<-str_replace(x$pays2_chiffre_MIO,"NA","")
x$pays2_chiffre_MIO<-str_replace(x$pays2_chiffre_MIO,"NA","")
x$pays2_chiffre_MIO<-str_replace(x$pays2_chiffre_MIO,"NA","")

x$pays1_chiffre<-case_when(
  x$pays1_chiffre_MIO !=""~x$pays1_chiffre_MIO,
  x$pays1_chiffre_MIO ==""~x$pays1_chiffre)

x$pays2_chiffre<-case_when(
  x$pays2_chiffre_MIO !=""~x$pays2_chiffre_MIO,
  x$pays2_chiffre_MIO ==""~x$pays2_chiffre)

x<-x%>%select(-pays1_chiffre_COL1, -pays1_chiffre_COL2, -pays1_chiffre_COL3, -pays1_chiffre_COL4, -pays1_chiffre_COL5, -pays1_chiffre_COL6, -pays1_chiffre_MIO)
x<-x%>%select(-pays2_chiffre_COL1, -pays2_chiffre_COL2, -pays2_chiffre_COL3, -pays2_chiffre_COL4, -pays2_chiffre_COL5, -pays2_chiffre_COL6, -pays2_chiffre_MIO)

x$pays1_chiffre<-str_replace_all(x$pays1_chiffre,",","")
x$pays1_chiffre<-str_replace_all(x$pays1_chiffre," ","")
x$pays1_chiffre<-str_replace_all(x$pays1_chiffre,"\\.","")
x$pays1_chiffre<-str_replace(x$pays1_chiffre,"\xa0","") #espace inséquable viré
x$pays1_chiffre<-str_replace(x$pays1_chiffre,"[^ -~]+","") #tout les caracteres non ansi viré
x$pays1_chiffre<-str_replace_all(x$pays1_chiffre,"aucun","0")
x$pays1_chiffre<-as.integer(x$pays1_chiffre)


x$pays2_chiffre<-str_replace_all(x$pays2_chiffre,",","")
x$pays2_chiffre<-str_replace_all(x$pays2_chiffre," ","")
x$pays2_chiffre<-str_replace_all(x$pays2_chiffre,"\\.","")
x$pay21_chiffre<-str_replace(x$pays2_chiffre,"\xa0","") #espace inséquable viré
x$pays2_chiffre<-str_replace(x$pays2_chiffre,"[^ -~]+","") #tout les caracteres non ansi viré
x$pays2_chiffre<-str_replace_all(x$pays2_chiffre,"aucun","0")
x$pays2_chiffre<-as.integer(x$pays2_chiffre)

gc()

#Identifie la guerre en classant les pays par ordre alphabétique

y<- count(x)
y<- as.integer(y)
j<- seq(1, y, by=1)


for (i in j){
  if(x[i,9] > x[i,10]){
    a<- x[i,9]
    b<- x[i,10]
    c<- x[i,11]
    d<- x[i,12]
    
    x[i,9]<-b
    x[i,10]<-a
    x[i,11]<-d
    x[i,11]<-c
  }
  
}

#Maintenant la base de données les pays sont classé par ordre alphabtique de gauche à droite

x<-x%>%mutate(nomguerre = paste0("guerre ", pays1_nom," - ", pays2_nom ))

#####Je dois encore classer les guerre par jour et si cela diminue, cela devient la guerre 2
liste_guerre<- x%>%group_by(nomguerre)%>%tally()%>%pull(nomguerre)

#nomguerrex <- "guerre RUSSIE - UKRAINE"

xb<-x[1,]
xb[1,1]<-""
xb[1,2]<-""
xb[1,3]<-""
xb[1,4]<-""
xb[1,5]<-""
xb[1,6]<-0
xb[1,9]<-""
xb[1,10]<-""
xb[1,11]<-0
xb[1,12]<-0
xb[1,13]<-""
#bug quand on a une seule valeur
nbrguerrefun <- function (nomguerrex){
  #nomguerrex <- "guerre RUSSIE - UKRAINE"
  xa<- x%>%filter(nomguerre == nomguerrex)%>%arrange(jour, pays1_chiffre, pays2_chiffre)
  sxa<- as.integer(count(xa))
  if(sxa==1){listesxa <- 1}else {listesxa <- 2:sxa}
  
  nbrguerre<-1
  xa$nomguerre[1]<-paste(xa$nomguerre[1],nbrguerre)
  #Probleme dans la formule, l'ordre ne se fait pas bien pour le nombre de guere, l'info doit sortir de la boucle
  for (u in listesxa){
    print(u)
    print(xa$nomguerre[u])
    #u<-1
    if(sxa!=1){
      if(xa$pays1_chiffre[u-1] > xa$pays1_chiffre[u] |xa$pays2_chiffre[u-1]>xa$pays2_chiffre[u])
      {nbrguerre<-nbrguerre+1
      xa$nomguerre[u]<-paste(xa$nomguerre[u],nbrguerre)
      }
      else{xa$nomguerre[u]<-paste(xa$nomguerre[u],nbrguerre)
      }
    }else{xa$nomguerre[1]<-paste(xa$nomguerre[1],nbrguerre)}
    
  }
  #xb<-rbind(xa,xb )
  return(xa)
}

xc<-xc[1,]
xc[1,1]<-""
xc[1,2]<-""
xc[1,3]<-""
xc[1,4]<-""
xc[1,5]<-""
xc[1,6]<-0
xc[1,9]<-""
xc[1,10]<-""
xc[1,11]<-0
xc[1,12]<-0
xc[1,13]<-""

xd<-xc
for(z in liste_guerre){
  xc<-nbrguerrefun(z)
  xd<-rbind(xd,xc)
  xc<-xc[1,]
  xc[1,1]<-""
  xc[1,2]<-""
  xc[1,3]<-""
  xc[1,4]<-""
  xc[1,5]<-""
  xc[1,6]<-0
  xc[1,9]<-""
  xc[1,10]<-""
  xc[1,11]<-0
  xc[1,12]<-0
  xc[1,13]<-""
}
